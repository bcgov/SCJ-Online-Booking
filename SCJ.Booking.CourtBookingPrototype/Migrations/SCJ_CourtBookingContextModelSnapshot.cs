// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCJ.Booking.CourtBookingPrototype;

#nullable disable

namespace SCJ.Booking.CourtBookingPrototype.Migrations
{
    [DbContext(typeof(SCJ_CourtBookingContext))]
    partial class SCJ_CourtBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SCJ.Booking.CourtBookingPrototype.Models.BookingPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistryId")
                        .HasColumnType("int");

                    b.Property<int?>("RegistrySettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrySettingId");

                    b.ToTable("BookingPeriods");
                });

            modelBuilder.Entity("SCJ.Booking.CourtBookingPrototype.Models.CaseBookingRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HearingType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhysicalFileId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SmGovUserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TrialLength")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CaseBookingRequests");
                });

            modelBuilder.Entity("SCJ.Booking.CourtBookingPrototype.Models.DateSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CaseBookingRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PreferenceOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseBookingRequestId");

                    b.ToTable("DateSelections");
                });

            modelBuilder.Entity("SCJ.Booking.CourtBookingPrototype.Models.RegistrySetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BookingEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BookingStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaximumDateSelections")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyBookingDay")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyBookingWeek")
                        .HasColumnType("int");

                    b.Property<int>("RegistryId")
                        .HasColumnType("int");

                    b.Property<bool>("UsesLottery")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RegistrySettings");
                });

            modelBuilder.Entity("SCJ.Booking.CourtBookingPrototype.Models.BookingPeriod", b =>
                {
                    b.HasOne("SCJ.Booking.CourtBookingPrototype.Models.RegistrySetting", null)
                        .WithMany("BookingPeriods")
                        .HasForeignKey("RegistrySettingId");
                });

            modelBuilder.Entity("SCJ.Booking.CourtBookingPrototype.Models.DateSelection", b =>
                {
                    b.HasOne("SCJ.Booking.CourtBookingPrototype.Models.CaseBookingRequest", "CaseBookingRequest")
                        .WithMany()
                        .HasForeignKey("CaseBookingRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseBookingRequest");
                });

            modelBuilder.Entity("SCJ.Booking.CourtBookingPrototype.Models.RegistrySetting", b =>
                {
                    b.Navigation("BookingPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
